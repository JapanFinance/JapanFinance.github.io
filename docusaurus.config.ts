import {themes as prismThemes} from 'prism-react-renderer';
import type {Config} from '@docusaurus/types';
import type * as Preset from '@docusaurus/preset-classic';
import type {PluginOptions as SearchPluginOptions} from '@easyops-cn/docusaurus-search-local';

const config: Config = {
  title: 'r/JapanFinance',
  tagline: 'Finance & Tech in Japan',
  favicon: 'img/favicon.ico',

  // Set the production url of your site here
  url: 'https://JapanFinance.github.io',
  // Set the /<baseUrl>/ pathname under which your site is served
  // For GitHub pages deployment, it is often '/<projectName>/'
  baseUrl: '/',

  // GitHub pages deployment config.
  // If you aren't using GitHub pages, you don't need these.
  organizationName: 'JapanFinance', // Usually your GitHub org/user name.
  projectName: 'JapanFinance.github.io', // Usually your repo name.

  // GitHub Pages adds a trailing slash to Docusaurus URLs by default. It is recommended to set a trailingSlash config (true or false, not undefined).
  trailingSlash: true,

  onBrokenLinks: 'warn', // TODO switch to 'throw' after addressing broken links
  onBrokenMarkdownLinks: 'warn',

  future: {
    // See https://docusaurus.io/blog/releases/3.6
    experimental_faster: true
  },

  // Even if you don't use internalization, you can use this field to set useful
  // metadata like html lang. For example, if your site is Chinese, you may want
  // to replace "en" with "zh-Hans".
  i18n: {
    defaultLocale: 'en',
    locales: ['en'],
  },

  markdown: {
    mermaid: true
  },

  presets: [
    [
      'classic',
      {
        docs: {
          routeBasePath: '/',
          sidebarPath: './sidebars.ts',
          editUrl: ({ docPath }) =>
            `https://old.reddit.com/r/JapanFinance/wiki/edit/index/${docPath.includes("index") ? '' : docPath.slice(0, docPath.lastIndexOf('.'))}`,
          async sidebarItemsGenerator({ defaultSidebarItemsGenerator, ...args }) {
            const sidebarItems = await defaultSidebarItemsGenerator(args);
            return updateAutogeneratedSiderbarForRedditWikiStructure(sidebarItems);
          },
        },
        blog: false,
        theme: {
          customCss: './src/css/custom.css',
        },
      } satisfies Preset.Options,
    ],
  ],

  themes: [
    [
      '@easyops-cn/docusaurus-search-local',
      {
        // `hashed` is recommended as long-term-cache of index file is possible.
        hashed: true,
        language: ['en', 'ja'],
        docsRouteBasePath: '/',
        indexBlog: false, // blog is disabled
      } satisfies SearchPluginOptions,
    ],
    '@docusaurus/theme-mermaid',
  ],

  themeConfig:
    {
      metadata: [{ name: 'keywords', content: 'finance, japan, tax, personal finance, income, retirement, FIRE' }],
      // Your project's social card
      image: 'img/social-card.jpg',
      navbar: {
        title: 'r/JapanFinance',
        logo: {
          alt: 'r/JapanFinance',
          src: 'img/logo.svg',
        },
        items: [
          {
            type: 'docSidebar',
            sidebarId: 'wikiSidebar',
            position: 'left',
            label: 'Wiki',
          },
          {
            href: 'https://www.reddit.com/r/JapanFinance/',
            position: 'right',
            className: 'header-reddit-link',
            'aria-label': 'r/JapanFinance subreddit'
          },
        ],
      },
      footer: {
        style: 'dark',
        links: [
          {
            title: 'Docs',
            items: [
              {
                label: 'Wiki',
                to: '/',
              },
            ],
          },
          {
            title: 'Community',
            items: [
              {
                label: 'Reddit',
                href: 'https://www.reddit.com/r/JapanFinance/',
              },
            ],
          },
        ],
        copyright: `Copyright Â© ${new Date().getFullYear()} r/JapanFinance contributors. Built with Docusaurus.`,
      },
      prism: {
        theme: prismThemes.github,
        darkTheme: prismThemes.dracula,
      },
    } satisfies Preset.ThemeConfig,
};

export default config;

/**
 * @param {import("@docusaurus/plugin-content-docs/src/sidebars/types.js").NormalizedSidebar} items
 */
function updateAutogeneratedSiderbarForRedditWikiStructure(items) {
  /** @type {import("@docusaurus/plugin-content-docs/src/sidebars/types.js").SidebarItemDoc[]} */
  const docs = items.filter(item => item.type === 'doc');
  let docsToRemove = [];
  items.filter(item => item.type === "category" && item.link !== undefined && item.link.type === 'doc' && docs.find(doc => doc.id === item.link.id) !== undefined)
    .forEach(item => {
      const matchingDoc = docs.find(doc => doc.id === item.link.id);
      docsToRemove.push(matchingDoc);
    });
  const result = items.filter(item => !docsToRemove.includes(item));
  return result;
}
